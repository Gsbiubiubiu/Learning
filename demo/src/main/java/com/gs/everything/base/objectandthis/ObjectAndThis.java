package com.gs.everything.base.objectandthis;

/**
 * @author: Gaos
 * @Date: 2022-11-11 17:23
 *
 *  对象与this
 **/
public class ObjectAndThis {
    /**
     * 对象的本质可以理解成为 "多个相关数据的统一载体"
     * 比如一个人，有name、age、height等社会或生理体征，而这些数据是属于一个个体的，
     * 如果用数组去存，表现力有所欠缺，无法表达“它们属于同一个个体”的含义。
     *
     * 但我们知道，在Java中对象是在堆空间中生成的，数据会在堆空间占据一定内存开销。而方法只有一份。
     */

    // 为什么方法被设计成只有一份呢？

    /**
     * 因为多个个体，属性可能不同，比如我身高180，
     * 你身高150，我18岁，你30了。但我们都能跑、能跳、能吃饭，这些技能（method）都是共通的，
     * 没必要和属性数据一样单独在堆空间各存一份，所以被抽取出来存放
     *
     * 此时方法相当于一份指令模版，谁都可以传给他数据交给他执行，返回执行后的结果
     */

    // 但此时会存在一个问题，张三这个对象调用了eat()方法，
    // 你应该把饭送到他嘴里，而不是送到李四嘴里。那么方法如何知道把饭送到哪里呢？
    // 换句话说：共性的方法如何处理特定的数据？

    /**
     * Python的self、Java的this其实就是解决这个问题的。
     * 你可以理解为对象内部持有一个引用，当你调用某个方法时，
     * 必须传递这个对象引用，然后方法根据这个引用就知道当前这套指令是对哪个对象的数据进行操作了。
     */

}